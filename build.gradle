plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.openapi.generator' version '7.14.0'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.maven.apache.org/maven2" }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.postgresql:postgresql:42.7.2'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'com.oracle.database.jdbc:ojdbc8:19.3.0.0'


    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.4'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.5.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:mysql'
    testImplementation "org.testcontainers:oracle-xe"

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.junit.platform:junit-platform-suite'

    implementation 'org.springframework.boot:spring-boot-starter-logging'

}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/openapi.yaml"
    outputDir = layout.buildDirectory.dir("generated").get().asFile.toString()
    apiPackage = "org.example.generated.api"
    modelPackage = "org.example.generated.model"
    invokerPackage = "org.example.generated.invoker"

    library = "spring-boot"
    configOptions = [
            useSpringBoot3        : "true",
            interfaceOnly         : "true",
            dateLibrary           : "java8",
            useTags               : "true",
            skipDefaultInterface  : "true"
    ]

    generateApiTests = false
    generateModelTests = false
}

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/src/main/java"
        }
    }
}




tasks.named('test') {
    useJUnitPlatform()
    filter {
        includeTestsMatching 'org.example.multidatabase.IntegrationTestSuite'
    }
}
